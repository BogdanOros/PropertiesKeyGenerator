version: 2
executors:
  java-executor:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      
commands:
  run-tests:
    description: "A command to run tests for a module"
    parameters:
      module:
        type: string
    steps:
       - checkout
       - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
       - run: echo Running api << parameters.module >>
  flyway-migrate:
    decription: "A command to run schema migrations"
    parameters:
      schema:
        type: string
    steps:
      - checkout
      - run: echo Migrating schema <<parameters.schema>>
  deploy:
    description: "A command to run deployment"
    parameters:
      module:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: echo Deploying << parameters.module >>
     
    
jobs:
  init-dependencies:
    executor: 
      name: java-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

  api-test:
    executor: java-executor
    steps:
      - run-tests:
          module: "api"
  worker-test:
    executor: java-executor
    steps:
      - run-tests:
          module: "worker"
 
  deploy-api:
    executor: java-executor
    steps:
      - deploy:
          module: "api"
          
  deploy-worker:
    executor: java-executor
    steps:
      - deploy:
          module: "worker"
workflows:
  version: 2
  comparison-workflow:
    jobs:
      - init-dependencies
      - api-test:
          requires:
            - init-dependencies
      - worker-test:
          requires:
            - init-dependencies
      - deploy-api:
          type: approval
          requires:
            - api-test
      - deploy-worker:
          type: approval
          requires:
            - worker-test
      
